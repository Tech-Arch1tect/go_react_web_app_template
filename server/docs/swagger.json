{
    "swagger": "2.0",
    "info": {
        "title": "Server API",
        "contact": {},
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/admin/users": {
            "get": {
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "description": "List all users with optional pagination parameters and search functionality",
                "tags": [
                    "admin"
                ],
                "summary": "List users with pagination and optional search",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AdminListUsersResponse"
                        }
                    },
                    "400": {
                        "description": "error: Invalid page or page size",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: failed to list users",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/users/{id}": {
            "delete": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrf": []
                    }
                ],
                "description": "Remove a user from the database by providing their ID",
                "tags": [
                    "admin"
                ],
                "summary": "Remove a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: user removed",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AdminRemoveUserResponse"
                        }
                    },
                    "500": {
                        "description": "error: failed to remove user",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/users/{id}/role": {
            "put": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrf": []
                    }
                ],
                "description": "Update the role of a user identified by their ID with the provided role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update user role by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Role",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AdminUpdateUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: user role updated, user: updated user details",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AdminUpdateUserRoleResponse"
                        }
                    },
                    "400": {
                        "description": "error: invalid input or invalid role",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "error: user not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: failed to update user role",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/change-password": {
            "post": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrf": []
                    }
                ],
                "description": "Change the password of the logged-in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "Password change details",
                        "name": "passwordChange",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: password changed successfully",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthChangePasswordResponse"
                        }
                    },
                    "400": {
                        "description": "error: bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "error: unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/csrf-token": {
            "get": {
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "description": "Get the CSRF token for the logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get CSRF token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthGetCSRFTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Login a user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthLoginResponse"
                        }
                    },
                    "400": {
                        "description": "error: bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "error: invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "security": [
                    {
                        "csrf": []
                    }
                ],
                "description": "Logout the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout a user",
                "responses": {
                    "200": {
                        "description": "message: logged out",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/password-reset": {
            "post": {
                "description": "Request a password reset for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request a password reset",
                "parameters": [
                    {
                        "description": "Password reset details",
                        "name": "passwordReset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthPasswordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: If you have an account with us, you will receive a password reset link shortly.",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthPasswordResetResponse"
                        }
                    },
                    "400": {
                        "description": "error: invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/profile": {
            "get": {
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "description": "Get the profile of the logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Register a new user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: user created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error: bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password": {
            "post": {
                "description": "Reset a user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset a user's password",
                "parameters": [
                    {
                        "description": "Reset password details",
                        "name": "resetPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Password reset successful",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthResetPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "error: invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/totp/confirm": {
            "post": {
                "description": "Confirm TOTP code for the user during login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Confirm TOTP code",
                "parameters": [
                    {
                        "description": "TOTP code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthConfirmTOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthConfirmTOTPResponse"
                        }
                    },
                    "400": {
                        "description": "error: invalid request or invalid TOTP code",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "error: unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/totp/disable": {
            "post": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrf": []
                    }
                ],
                "description": "Disable TOTP for the logged-in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Disable TOTP",
                "parameters": [
                    {
                        "description": "TOTP code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthDisableTOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthDisableTOTPResponse"
                        }
                    },
                    "400": {
                        "description": "error: invalid TOTP code",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "error: unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/totp/enable": {
            "post": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrf": []
                    }
                ],
                "description": "Enable TOTP for the logged-in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Enable TOTP",
                "parameters": [
                    {
                        "description": "TOTP code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthEnableTOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthEnableTOTPResponse"
                        }
                    },
                    "400": {
                        "description": "error: invalid TOTP code",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "error: unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/totp/generate": {
            "post": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrf": []
                    }
                ],
                "description": "Generate a new TOTP secret for the logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate TOTP secret",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.AuthGenerateTOTPResponse"
                        }
                    },
                    "401": {
                        "description": "error: unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/misc/appname": {
            "get": {
                "description": "Get the app name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "misc"
                ],
                "summary": "Get the app name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_controllers.MiscAppNameResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api_controllers.AdminListUsersResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_records": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "api_controllers.AdminRemoveUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AdminUpdateUserRoleRequest": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AdminUpdateUserRoleResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "api_controllers.AuthChangePasswordRequest": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "api_controllers.AuthChangePasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthConfirmTOTPRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthConfirmTOTPResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthDisableTOTPRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthDisableTOTPResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthEnableTOTPRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthEnableTOTPResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthGenerateTOTPResponse": {
            "type": "object",
            "properties": {
                "secret": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthGetCSRFTokenResponse": {
            "type": "object",
            "properties": {
                "csrf_token": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthLoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthPasswordResetRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthPasswordResetResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthRegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthResetPasswordRequest": {
            "type": "object",
            "required": [
                "code",
                "email",
                "password"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "api_controllers.AuthResetPasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api_controllers.MiscAppNameResponse": {
            "type": "object",
            "properties": {
                "app_name": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.Role": {
            "type": "string",
            "enum": [
                "user",
                "admin",
                "disabled"
            ],
            "x-enum-varnames": [
                "RoleUser",
                "RoleAdmin",
                "RoleDisabled"
            ]
        },
        "models.User": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "totp_enabled": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "csrf": {
            "type": "apiKey",
            "name": "X-CSRF-Token",
            "in": "header"
        }
    }
}